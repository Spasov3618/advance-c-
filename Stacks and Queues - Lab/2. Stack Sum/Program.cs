using System;
using System.Collections.Generic;
using System.Linq;

namespace _2._Stack_Sum
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Създаване на програма, която:
            //Чете вход от целочислени числа и ги добавя към стека.
            //Чете и изпълнява команди до получаване на "край".
            //Обработвайте следните команди:
            //Добавяне<n1> < n2 >: избутва две числа в стека
            //Премахване<n>: премахва n елементите от стека или не прави нищо, ако стека държи по-малко от n елементи.
            //Отпечатва сумата от останалите елементи на стека.
            //Въвеждане
            //На първия ред ще получите масив от цяло число(разделени на пространството).
            //На следващите редове, докато се даде командата "край", ще получавате команди – една единствена команда и един или два номера след командата, в зависимост от това каква команда ви е дадена.
            //Ако командата е "добави", винаги ще ви бъдат дадени точно два номера след командата, които трябва да добавите към стека.
            //Ако командата е "премахване", винаги ще ви бъде даден точно един номер след командата, което представлява броя на числата, които трябва да премахнете от стека.Ако няма достатъчно елементи, пропуснете командата.
            //Командите са безчувствени към случая, което означава, че "Добавяне", "добавяне" и "ADD" са една и съща команда.
            //Като разделител между командите и числата се използва едно - единствено пространство.
            int[] input = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();
            Stack<int> stack = new Stack<int>(input);
            
            string cmn;
            while ((cmn =Console.ReadLine().ToLower()) != "end")
            {
                string[] command = cmn.Split(" ");
                if (command[0] == "add")
                {
                    int n1 = int.Parse(command[1]);
                    int n2 = int.Parse(command[2]); 
                    stack.Push(n1);
                    stack.Push(n2);
                }
                else if (command[0] == "remove")
                {
                    int count = int.Parse((command[1]));
                    if (count<=stack.Count)
                    {
                        for (int i = 0; i < count; i++)
                        {
                            stack.Pop();
                        }
                    }
                }
            }
            Console.WriteLine($"Sum: {stack.Sum()}");
        }
    }
}
